{"ast":null,"code":"import { startOfQuarter } from \"./startOfQuarter.mjs\";\n\n/**\r\n * @name isSameQuarter\r\n * @category Quarter Helpers\r\n * @summary Are the given dates in the same quarter (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same quarter (and year)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n\r\n * @returns The dates are in the same quarter (and year)\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\r\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 1 January 2015 in the same quarter?\r\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2015, 0, 1))\r\n * //=> false\r\n */\nexport function isSameQuarter(dateLeft, dateRight) {\n  const dateLeftStartOfQuarter = startOfQuarter(dateLeft);\n  const dateRightStartOfQuarter = startOfQuarter(dateRight);\n  return +dateLeftStartOfQuarter === +dateRightStartOfQuarter;\n}\n\n// Fallback for modularized imports:\nexport default isSameQuarter;","map":{"version":3,"names":["startOfQuarter","isSameQuarter","dateLeft","dateRight","dateLeftStartOfQuarter","dateRightStartOfQuarter"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/isSameQuarter.mjs"],"sourcesContent":["import { startOfQuarter } from \"./startOfQuarter.mjs\";\r\n\r\n/**\r\n * @name isSameQuarter\r\n * @category Quarter Helpers\r\n * @summary Are the given dates in the same quarter (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same quarter (and year)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n\r\n * @returns The dates are in the same quarter (and year)\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\r\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 1 January 2015 in the same quarter?\r\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2015, 0, 1))\r\n * //=> false\r\n */\r\nexport function isSameQuarter(dateLeft, dateRight) {\r\n  const dateLeftStartOfQuarter = startOfQuarter(dateLeft);\r\n  const dateRightStartOfQuarter = startOfQuarter(dateRight);\r\n\r\n  return +dateLeftStartOfQuarter === +dateRightStartOfQuarter;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isSameQuarter;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,sBAAsB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,QAAQ,EAAEC,SAAS,EAAE;EACjD,MAAMC,sBAAsB,GAAGJ,cAAc,CAACE,QAAQ,CAAC;EACvD,MAAMG,uBAAuB,GAAGL,cAAc,CAACG,SAAS,CAAC;EAEzD,OAAO,CAACC,sBAAsB,KAAK,CAACC,uBAAuB;AAC7D;;AAEA;AACA,eAAeJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}