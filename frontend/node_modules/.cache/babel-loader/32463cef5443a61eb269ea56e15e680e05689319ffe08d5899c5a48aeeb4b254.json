{"ast":null,"code":"import { constructNow } from \"./constructNow.mjs\";\nimport { formatDistance } from \"./formatDistance.mjs\";\n\n/**\r\n * The {@link formatDistanceToNow} function options.\r\n */\n\n/**\r\n * @name formatDistanceToNow\r\n * @category Common Helpers\r\n * @summary Return the distance between the given date and now in words.\r\n * @pure false\r\n *\r\n * @description\r\n * Return the distance between the given date and now in words.\r\n *\r\n * | Distance to now                                                   | Result              |\r\n * |-------------------------------------------------------------------|---------------------|\r\n * | 0 ... 30 secs                                                     | less than a minute  |\r\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\r\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\r\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\r\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\r\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\r\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\r\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\r\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\r\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\r\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\r\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\r\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\r\n * | N yrs ... N yrs 3 months                                          | about N years       |\r\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\r\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\r\n *\r\n * With `options.includeSeconds == true`:\r\n * | Distance to now     | Result               |\r\n * |---------------------|----------------------|\r\n * | 0 secs ... 5 secs   | less than 5 seconds  |\r\n * | 5 secs ... 10 secs  | less than 10 seconds |\r\n * | 10 secs ... 20 secs | less than 20 seconds |\r\n * | 20 secs ... 40 secs | half a minute        |\r\n * | 40 secs ... 60 secs | less than a minute   |\r\n * | 60 secs ... 90 secs | 1 minute             |\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given date\r\n * @param options - The object with options\r\n *\r\n * @returns The distance in words\r\n *\r\n * @throws `date` must not be Invalid Date\r\n * @throws `options.locale` must contain `formatDistance` property\r\n *\r\n * @example\r\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\r\n * const result = formatDistanceToNow(\r\n *   new Date(2014, 6, 2)\r\n * )\r\n * //=> '6 months'\r\n *\r\n * @example\r\n * // If now is 1 January 2015 00:00:00,\r\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\r\n * const result = formatDistanceToNow(\r\n *   new Date(2015, 0, 1, 0, 0, 15),\r\n *   {includeSeconds: true}\r\n * )\r\n * //=> 'less than 20 seconds'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 January 2016, with a suffix?\r\n * const result = formatDistanceToNow(\r\n *   new Date(2016, 0, 1),\r\n *   {addSuffix: true}\r\n * )\r\n * //=> 'in about 1 year'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 August 2016 in Esperanto?\r\n * const eoLocale = require('date-fns/locale/eo')\r\n * const result = formatDistanceToNow(\r\n *   new Date(2016, 7, 1),\r\n *   {locale: eoLocale}\r\n * )\r\n * //=> 'pli ol 1 jaro'\r\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;","map":{"version":3,"names":["constructNow","formatDistance","formatDistanceToNow","date","options"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/formatDistanceToNow.mjs"],"sourcesContent":["import { constructNow } from \"./constructNow.mjs\";\r\nimport { formatDistance } from \"./formatDistance.mjs\";\r\n\r\n/**\r\n * The {@link formatDistanceToNow} function options.\r\n */\r\n\r\n/**\r\n * @name formatDistanceToNow\r\n * @category Common Helpers\r\n * @summary Return the distance between the given date and now in words.\r\n * @pure false\r\n *\r\n * @description\r\n * Return the distance between the given date and now in words.\r\n *\r\n * | Distance to now                                                   | Result              |\r\n * |-------------------------------------------------------------------|---------------------|\r\n * | 0 ... 30 secs                                                     | less than a minute  |\r\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\r\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\r\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\r\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\r\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\r\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\r\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\r\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\r\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\r\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\r\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\r\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\r\n * | N yrs ... N yrs 3 months                                          | about N years       |\r\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\r\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\r\n *\r\n * With `options.includeSeconds == true`:\r\n * | Distance to now     | Result               |\r\n * |---------------------|----------------------|\r\n * | 0 secs ... 5 secs   | less than 5 seconds  |\r\n * | 5 secs ... 10 secs  | less than 10 seconds |\r\n * | 10 secs ... 20 secs | less than 20 seconds |\r\n * | 20 secs ... 40 secs | half a minute        |\r\n * | 40 secs ... 60 secs | less than a minute   |\r\n * | 60 secs ... 90 secs | 1 minute             |\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given date\r\n * @param options - The object with options\r\n *\r\n * @returns The distance in words\r\n *\r\n * @throws `date` must not be Invalid Date\r\n * @throws `options.locale` must contain `formatDistance` property\r\n *\r\n * @example\r\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\r\n * const result = formatDistanceToNow(\r\n *   new Date(2014, 6, 2)\r\n * )\r\n * //=> '6 months'\r\n *\r\n * @example\r\n * // If now is 1 January 2015 00:00:00,\r\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\r\n * const result = formatDistanceToNow(\r\n *   new Date(2015, 0, 1, 0, 0, 15),\r\n *   {includeSeconds: true}\r\n * )\r\n * //=> 'less than 20 seconds'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 January 2016, with a suffix?\r\n * const result = formatDistanceToNow(\r\n *   new Date(2016, 0, 1),\r\n *   {addSuffix: true}\r\n * )\r\n * //=> 'in about 1 year'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 August 2016 in Esperanto?\r\n * const eoLocale = require('date-fns/locale/eo')\r\n * const result = formatDistanceToNow(\r\n *   new Date(2016, 7, 1),\r\n *   {locale: eoLocale}\r\n * )\r\n * //=> 'pli ol 1 jaro'\r\n */\r\nexport function formatDistanceToNow(date, options) {\r\n  return formatDistance(date, constructNow(date), options);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default formatDistanceToNow;\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,oBAAoB;AACjD,SAASC,cAAc,QAAQ,sBAAsB;;AAErD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACjD,OAAOH,cAAc,CAACE,IAAI,EAAEH,YAAY,CAACG,IAAI,CAAC,EAAEC,OAAO,CAAC;AAC1D;;AAEA;AACA,eAAeF,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}