{"ast":null,"code":"import { constructFrom } from \"./constructFrom.mjs\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\r\n * @name setISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Set the ISO week-numbering year to the given date.\r\n *\r\n * @description\r\n * Set the ISO week-numbering year to the given date,\r\n * saving the week number and the weekday number.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param weekYear - The ISO week-numbering year of the new date\r\n *\r\n * @returns The new date with the ISO week-numbering year set\r\n *\r\n * @example\r\n * // Set ISO week-numbering year 2007 to 29 December 2008:\r\n * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)\r\n * //=> Mon Jan 01 2007 00:00:00\r\n */\nexport function setISOWeekYear(date, weekYear) {\n  let _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfISOWeekYear(_date));\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(weekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  _date = startOfISOWeekYear(fourthOfJanuary);\n  _date.setDate(_date.getDate() + diff);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeekYear;","map":{"version":3,"names":["constructFrom","differenceInCalendarDays","startOfISOWeekYear","toDate","setISOWeekYear","date","weekYear","_date","diff","fourthOfJanuary","setFullYear","setHours","setDate","getDate"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/setISOWeekYear.mjs"],"sourcesContent":["import { constructFrom } from \"./constructFrom.mjs\";\r\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\r\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\r\nimport { toDate } from \"./toDate.mjs\";\r\n\r\n/**\r\n * @name setISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Set the ISO week-numbering year to the given date.\r\n *\r\n * @description\r\n * Set the ISO week-numbering year to the given date,\r\n * saving the week number and the weekday number.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param weekYear - The ISO week-numbering year of the new date\r\n *\r\n * @returns The new date with the ISO week-numbering year set\r\n *\r\n * @example\r\n * // Set ISO week-numbering year 2007 to 29 December 2008:\r\n * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)\r\n * //=> Mon Jan 01 2007 00:00:00\r\n */\r\nexport function setISOWeekYear(date, weekYear) {\r\n  let _date = toDate(date);\r\n  const diff = differenceInCalendarDays(_date, startOfISOWeekYear(_date));\r\n  const fourthOfJanuary = constructFrom(date, 0);\r\n  fourthOfJanuary.setFullYear(weekYear, 0, 4);\r\n  fourthOfJanuary.setHours(0, 0, 0, 0);\r\n  _date = startOfISOWeekYear(fourthOfJanuary);\r\n  _date.setDate(_date.getDate() + diff);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default setISOWeekYear;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,qBAAqB;AACnD,SAASC,wBAAwB,QAAQ,gCAAgC;AACzE,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,MAAM,QAAQ,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC7C,IAAIC,KAAK,GAAGJ,MAAM,CAACE,IAAI,CAAC;EACxB,MAAMG,IAAI,GAAGP,wBAAwB,CAACM,KAAK,EAAEL,kBAAkB,CAACK,KAAK,CAAC,CAAC;EACvE,MAAME,eAAe,GAAGT,aAAa,CAACK,IAAI,EAAE,CAAC,CAAC;EAC9CI,eAAe,CAACC,WAAW,CAACJ,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3CG,eAAe,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpCJ,KAAK,GAAGL,kBAAkB,CAACO,eAAe,CAAC;EAC3CF,KAAK,CAACK,OAAO,CAACL,KAAK,CAACM,OAAO,CAAC,CAAC,GAAGL,IAAI,CAAC;EACrC,OAAOD,KAAK;AACd;;AAEA;AACA,eAAeH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}