{"ast":null,"code":"import { formatDistanceStrict } from \"./formatDistanceStrict.mjs\";\nimport { constructNow } from \"./constructNow.mjs\";\n\n/**\r\n * The {@link formatDistanceToNowStrict} function options.\r\n */\n\n/**\r\n * @name formatDistanceToNowStrict\r\n * @category Common Helpers\r\n * @summary Return the distance between the given date and now in words.\r\n * @pure false\r\n *\r\n * @description\r\n * Return the distance between the given dates in words, using strict units.\r\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\r\n * 'less than' and the like.\r\n *\r\n * | Distance between dates | Result              |\r\n * |------------------------|---------------------|\r\n * | 0 ... 59 secs          | [0..59] seconds     |\r\n * | 1 ... 59 mins          | [1..59] minutes     |\r\n * | 1 ... 23 hrs           | [1..23] hours       |\r\n * | 1 ... 29 days          | [1..29] days        |\r\n * | 1 ... 11 months        | [1..11] months      |\r\n * | 1 ... N years          | [1..N]  years       |\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given date\r\n * @param options - An object with options.\r\n *\r\n * @returns The distance in words\r\n *\r\n * @throws `date` must not be Invalid Date\r\n * @throws `options.locale` must contain `formatDistance` property\r\n *\r\n * @example\r\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\r\n * const result = formatDistanceToNowStrict(\r\n *   new Date(2014, 6, 2)\r\n * )\r\n * //=> '6 months'\r\n *\r\n * @example\r\n * // If now is 1 January 2015 00:00:00,\r\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\r\n * const result = formatDistanceToNowStrict(\r\n *   new Date(2015, 0, 1, 0, 0, 15)\r\n * )\r\n * //=> '15 seconds'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 January 2016, with a suffix?\r\n * const result = formatDistanceToNowStrict(\r\n *   new Date(2016, 0, 1),\r\n *   {addSuffix: true}\r\n * )\r\n * //=> 'in 1 year'\r\n *\r\n * @example\r\n * // If today is 28 January 2015,\r\n * // what is the distance to 1 January 2015, in months, rounded up??\r\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\r\n *   unit: 'month',\r\n *   roundingMethod: 'ceil'\r\n * })\r\n * //=> '1 month'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 January 2016 in Esperanto?\r\n * const eoLocale = require('date-fns/locale/eo')\r\n * const result = formatDistanceToNowStrict(\r\n *   new Date(2016, 0, 1),\r\n *   {locale: eoLocale}\r\n * )\r\n * //=> '1 jaro'\r\n */\nexport function formatDistanceToNowStrict(date, options) {\n  return formatDistanceStrict(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNowStrict;","map":{"version":3,"names":["formatDistanceStrict","constructNow","formatDistanceToNowStrict","date","options"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/formatDistanceToNowStrict.mjs"],"sourcesContent":["import { formatDistanceStrict } from \"./formatDistanceStrict.mjs\";\r\nimport { constructNow } from \"./constructNow.mjs\";\r\n\r\n/**\r\n * The {@link formatDistanceToNowStrict} function options.\r\n */\r\n\r\n/**\r\n * @name formatDistanceToNowStrict\r\n * @category Common Helpers\r\n * @summary Return the distance between the given date and now in words.\r\n * @pure false\r\n *\r\n * @description\r\n * Return the distance between the given dates in words, using strict units.\r\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\r\n * 'less than' and the like.\r\n *\r\n * | Distance between dates | Result              |\r\n * |------------------------|---------------------|\r\n * | 0 ... 59 secs          | [0..59] seconds     |\r\n * | 1 ... 59 mins          | [1..59] minutes     |\r\n * | 1 ... 23 hrs           | [1..23] hours       |\r\n * | 1 ... 29 days          | [1..29] days        |\r\n * | 1 ... 11 months        | [1..11] months      |\r\n * | 1 ... N years          | [1..N]  years       |\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given date\r\n * @param options - An object with options.\r\n *\r\n * @returns The distance in words\r\n *\r\n * @throws `date` must not be Invalid Date\r\n * @throws `options.locale` must contain `formatDistance` property\r\n *\r\n * @example\r\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\r\n * const result = formatDistanceToNowStrict(\r\n *   new Date(2014, 6, 2)\r\n * )\r\n * //=> '6 months'\r\n *\r\n * @example\r\n * // If now is 1 January 2015 00:00:00,\r\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\r\n * const result = formatDistanceToNowStrict(\r\n *   new Date(2015, 0, 1, 0, 0, 15)\r\n * )\r\n * //=> '15 seconds'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 January 2016, with a suffix?\r\n * const result = formatDistanceToNowStrict(\r\n *   new Date(2016, 0, 1),\r\n *   {addSuffix: true}\r\n * )\r\n * //=> 'in 1 year'\r\n *\r\n * @example\r\n * // If today is 28 January 2015,\r\n * // what is the distance to 1 January 2015, in months, rounded up??\r\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\r\n *   unit: 'month',\r\n *   roundingMethod: 'ceil'\r\n * })\r\n * //=> '1 month'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 January 2016 in Esperanto?\r\n * const eoLocale = require('date-fns/locale/eo')\r\n * const result = formatDistanceToNowStrict(\r\n *   new Date(2016, 0, 1),\r\n *   {locale: eoLocale}\r\n * )\r\n * //=> '1 jaro'\r\n */\r\nexport function formatDistanceToNowStrict(date, options) {\r\n  return formatDistanceStrict(date, constructNow(date), options);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default formatDistanceToNowStrict;\r\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,4BAA4B;AACjE,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,yBAAyBA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACvD,OAAOJ,oBAAoB,CAACG,IAAI,EAAEF,YAAY,CAACE,IAAI,CAAC,EAAEC,OAAO,CAAC;AAChE;;AAEA;AACA,eAAeF,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}