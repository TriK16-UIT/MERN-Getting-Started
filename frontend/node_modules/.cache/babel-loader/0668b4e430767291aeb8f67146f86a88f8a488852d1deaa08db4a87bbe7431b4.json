{"ast":null,"code":"import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\"\n};\n\n/*\r\n * |     | Unit                           |     | Unit                           |\r\n * |-----|--------------------------------|-----|--------------------------------|\r\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\r\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\r\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\r\n * |  d  | Day of month                   |  D  | Day of year                    |\r\n * |  e  | Local day of week              |  E  | Day of week                    |\r\n * |  f  |                                |  F* | Day of week in month           |\r\n * |  g* | Modified Julian day            |  G  | Era                            |\r\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\r\n * |  i! | ISO day of week                |  I! | ISO week of year               |\r\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\r\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\r\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\r\n * |  m  | Minute                         |  M  | Month                          |\r\n * |  n  |                                |  N  |                                |\r\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\r\n * |  p! | Long localized time            |  P! | Long localized date            |\r\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\r\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\r\n * |  s  | Second                         |  S  | Fraction of second             |\r\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\r\n * |  u  | Extended year                  |  U* | Cyclic year                    |\r\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\r\n * |  w  | Local week of year             |  W* | Week of month                  |\r\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\r\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\r\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\r\n *\r\n * Letters marked by * are not implemented but reserved by Unicode standard.\r\n *\r\n * Letters marked by ! are non-standard, but implemented by date-fns:\r\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\r\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\r\n *   i.e. 7 for Sunday, 1 for Monday, etc.\r\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\r\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\r\n *   `R` is supposed to be used in conjunction with `I` and `i`\r\n *   for universal ISO week-numbering date, whereas\r\n *   `Y` is supposed to be used in conjunction with `w` and `e`\r\n *   for week-numbering date specific to the locale.\r\n * - `P` is long localized date format\r\n * - `p` is long localized time format\r\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, {\n          width: \"abbreviated\"\n        });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, {\n          width: \"narrow\"\n        });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, {\n          width: \"wide\"\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: \"year\"\n      });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, {\n        unit: \"year\"\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, {\n          unit: \"quarter\"\n        });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, {\n          unit: \"quarter\"\n        });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, {\n          unit: \"month\"\n        });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, {\n          unit: \"month\"\n        });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, {\n        unit: \"week\"\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, {\n        unit: \"week\"\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), {\n        unit: \"date\"\n      });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: \"dayOfYear\"\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: \"day\"\n        });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: \"day\"\n        });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\"\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: \"day\"\n        });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"aaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"bbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: \"hour\"\n      });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), {\n        unit: \"hour\"\n      });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, {\n        unit: \"hour\"\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, {\n        unit: \"hour\"\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), {\n        unit: \"minute\"\n      });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), {\n        unit: \"second\"\n      });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\":\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\":\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}","map":{"version":3,"names":["getDayOfYear","getISOWeek","getISOWeekYear","getWeek","getWeekYear","addLeadingZeros","lightFormatters","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","date","token","localize","era","getFullYear","width","y","signedYear","year","ordinalNumber","unit","Y","options","signedWeekYear","weekYear","twoDigitYear","length","R","isoWeekYear","u","Q","quarter","Math","ceil","getMonth","String","context","q","M","month","L","w","week","I","isoWeek","d","getDate","D","dayOfYear","E","dayOfWeek","getDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","hours","getHours","dayPeriodEnumValue","dayPeriod","toLowerCase","b","B","h","H","K","k","m","getMinutes","s","getSeconds","S","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","trunc","getTime","T","offset","delimiter","sign","absOffset","abs","minutes"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/_lib/format/formatters.mjs"],"sourcesContent":["import { getDayOfYear } from \"../../getDayOfYear.mjs\";\r\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\r\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\r\nimport { getWeek } from \"../../getWeek.mjs\";\r\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\r\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\r\nimport { lightFormatters } from \"./lightFormatters.mjs\";\r\n\r\nconst dayPeriodEnum = {\r\n  am: \"am\",\r\n  pm: \"pm\",\r\n  midnight: \"midnight\",\r\n  noon: \"noon\",\r\n  morning: \"morning\",\r\n  afternoon: \"afternoon\",\r\n  evening: \"evening\",\r\n  night: \"night\",\r\n};\r\n\r\n/*\r\n * |     | Unit                           |     | Unit                           |\r\n * |-----|--------------------------------|-----|--------------------------------|\r\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\r\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\r\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\r\n * |  d  | Day of month                   |  D  | Day of year                    |\r\n * |  e  | Local day of week              |  E  | Day of week                    |\r\n * |  f  |                                |  F* | Day of week in month           |\r\n * |  g* | Modified Julian day            |  G  | Era                            |\r\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\r\n * |  i! | ISO day of week                |  I! | ISO week of year               |\r\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\r\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\r\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\r\n * |  m  | Minute                         |  M  | Month                          |\r\n * |  n  |                                |  N  |                                |\r\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\r\n * |  p! | Long localized time            |  P! | Long localized date            |\r\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\r\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\r\n * |  s  | Second                         |  S  | Fraction of second             |\r\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\r\n * |  u  | Extended year                  |  U* | Cyclic year                    |\r\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\r\n * |  w  | Local week of year             |  W* | Week of month                  |\r\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\r\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\r\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\r\n *\r\n * Letters marked by * are not implemented but reserved by Unicode standard.\r\n *\r\n * Letters marked by ! are non-standard, but implemented by date-fns:\r\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\r\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\r\n *   i.e. 7 for Sunday, 1 for Monday, etc.\r\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\r\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\r\n *   `R` is supposed to be used in conjunction with `I` and `i`\r\n *   for universal ISO week-numbering date, whereas\r\n *   `Y` is supposed to be used in conjunction with `w` and `e`\r\n *   for week-numbering date specific to the locale.\r\n * - `P` is long localized date format\r\n * - `p` is long localized time format\r\n */\r\n\r\nexport const formatters = {\r\n  // Era\r\n  G: function (date, token, localize) {\r\n    const era = date.getFullYear() > 0 ? 1 : 0;\r\n    switch (token) {\r\n      // AD, BC\r\n      case \"G\":\r\n      case \"GG\":\r\n      case \"GGG\":\r\n        return localize.era(era, { width: \"abbreviated\" });\r\n      // A, B\r\n      case \"GGGGG\":\r\n        return localize.era(era, { width: \"narrow\" });\r\n      // Anno Domini, Before Christ\r\n      case \"GGGG\":\r\n      default:\r\n        return localize.era(era, { width: \"wide\" });\r\n    }\r\n  },\r\n\r\n  // Year\r\n  y: function (date, token, localize) {\r\n    // Ordinal number\r\n    if (token === \"yo\") {\r\n      const signedYear = date.getFullYear();\r\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\r\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\r\n      return localize.ordinalNumber(year, { unit: \"year\" });\r\n    }\r\n\r\n    return lightFormatters.y(date, token);\r\n  },\r\n\r\n  // Local week-numbering year\r\n  Y: function (date, token, localize, options) {\r\n    const signedWeekYear = getWeekYear(date, options);\r\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\r\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\r\n\r\n    // Two digit year\r\n    if (token === \"YY\") {\r\n      const twoDigitYear = weekYear % 100;\r\n      return addLeadingZeros(twoDigitYear, 2);\r\n    }\r\n\r\n    // Ordinal number\r\n    if (token === \"Yo\") {\r\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\r\n    }\r\n\r\n    // Padding\r\n    return addLeadingZeros(weekYear, token.length);\r\n  },\r\n\r\n  // ISO week-numbering year\r\n  R: function (date, token) {\r\n    const isoWeekYear = getISOWeekYear(date);\r\n\r\n    // Padding\r\n    return addLeadingZeros(isoWeekYear, token.length);\r\n  },\r\n\r\n  // Extended year. This is a single number designating the year of this calendar system.\r\n  // The main difference between `y` and `u` localizers are B.C. years:\r\n  // | Year | `y` | `u` |\r\n  // |------|-----|-----|\r\n  // | AC 1 |   1 |   1 |\r\n  // | BC 1 |   1 |   0 |\r\n  // | BC 2 |   2 |  -1 |\r\n  // Also `yy` always returns the last two digits of a year,\r\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\r\n  u: function (date, token) {\r\n    const year = date.getFullYear();\r\n    return addLeadingZeros(year, token.length);\r\n  },\r\n\r\n  // Quarter\r\n  Q: function (date, token, localize) {\r\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\r\n    switch (token) {\r\n      // 1, 2, 3, 4\r\n      case \"Q\":\r\n        return String(quarter);\r\n      // 01, 02, 03, 04\r\n      case \"QQ\":\r\n        return addLeadingZeros(quarter, 2);\r\n      // 1st, 2nd, 3rd, 4th\r\n      case \"Qo\":\r\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\r\n      // Q1, Q2, Q3, Q4\r\n      case \"QQQ\":\r\n        return localize.quarter(quarter, {\r\n          width: \"abbreviated\",\r\n          context: \"formatting\",\r\n        });\r\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\r\n      case \"QQQQQ\":\r\n        return localize.quarter(quarter, {\r\n          width: \"narrow\",\r\n          context: \"formatting\",\r\n        });\r\n      // 1st quarter, 2nd quarter, ...\r\n      case \"QQQQ\":\r\n      default:\r\n        return localize.quarter(quarter, {\r\n          width: \"wide\",\r\n          context: \"formatting\",\r\n        });\r\n    }\r\n  },\r\n\r\n  // Stand-alone quarter\r\n  q: function (date, token, localize) {\r\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\r\n    switch (token) {\r\n      // 1, 2, 3, 4\r\n      case \"q\":\r\n        return String(quarter);\r\n      // 01, 02, 03, 04\r\n      case \"qq\":\r\n        return addLeadingZeros(quarter, 2);\r\n      // 1st, 2nd, 3rd, 4th\r\n      case \"qo\":\r\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\r\n      // Q1, Q2, Q3, Q4\r\n      case \"qqq\":\r\n        return localize.quarter(quarter, {\r\n          width: \"abbreviated\",\r\n          context: \"standalone\",\r\n        });\r\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\r\n      case \"qqqqq\":\r\n        return localize.quarter(quarter, {\r\n          width: \"narrow\",\r\n          context: \"standalone\",\r\n        });\r\n      // 1st quarter, 2nd quarter, ...\r\n      case \"qqqq\":\r\n      default:\r\n        return localize.quarter(quarter, {\r\n          width: \"wide\",\r\n          context: \"standalone\",\r\n        });\r\n    }\r\n  },\r\n\r\n  // Month\r\n  M: function (date, token, localize) {\r\n    const month = date.getMonth();\r\n    switch (token) {\r\n      case \"M\":\r\n      case \"MM\":\r\n        return lightFormatters.M(date, token);\r\n      // 1st, 2nd, ..., 12th\r\n      case \"Mo\":\r\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\r\n      // Jan, Feb, ..., Dec\r\n      case \"MMM\":\r\n        return localize.month(month, {\r\n          width: \"abbreviated\",\r\n          context: \"formatting\",\r\n        });\r\n      // J, F, ..., D\r\n      case \"MMMMM\":\r\n        return localize.month(month, {\r\n          width: \"narrow\",\r\n          context: \"formatting\",\r\n        });\r\n      // January, February, ..., December\r\n      case \"MMMM\":\r\n      default:\r\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\r\n    }\r\n  },\r\n\r\n  // Stand-alone month\r\n  L: function (date, token, localize) {\r\n    const month = date.getMonth();\r\n    switch (token) {\r\n      // 1, 2, ..., 12\r\n      case \"L\":\r\n        return String(month + 1);\r\n      // 01, 02, ..., 12\r\n      case \"LL\":\r\n        return addLeadingZeros(month + 1, 2);\r\n      // 1st, 2nd, ..., 12th\r\n      case \"Lo\":\r\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\r\n      // Jan, Feb, ..., Dec\r\n      case \"LLL\":\r\n        return localize.month(month, {\r\n          width: \"abbreviated\",\r\n          context: \"standalone\",\r\n        });\r\n      // J, F, ..., D\r\n      case \"LLLLL\":\r\n        return localize.month(month, {\r\n          width: \"narrow\",\r\n          context: \"standalone\",\r\n        });\r\n      // January, February, ..., December\r\n      case \"LLLL\":\r\n      default:\r\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\r\n    }\r\n  },\r\n\r\n  // Local week of year\r\n  w: function (date, token, localize, options) {\r\n    const week = getWeek(date, options);\r\n\r\n    if (token === \"wo\") {\r\n      return localize.ordinalNumber(week, { unit: \"week\" });\r\n    }\r\n\r\n    return addLeadingZeros(week, token.length);\r\n  },\r\n\r\n  // ISO week of year\r\n  I: function (date, token, localize) {\r\n    const isoWeek = getISOWeek(date);\r\n\r\n    if (token === \"Io\") {\r\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\r\n    }\r\n\r\n    return addLeadingZeros(isoWeek, token.length);\r\n  },\r\n\r\n  // Day of the month\r\n  d: function (date, token, localize) {\r\n    if (token === \"do\") {\r\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\r\n    }\r\n\r\n    return lightFormatters.d(date, token);\r\n  },\r\n\r\n  // Day of year\r\n  D: function (date, token, localize) {\r\n    const dayOfYear = getDayOfYear(date);\r\n\r\n    if (token === \"Do\") {\r\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\r\n    }\r\n\r\n    return addLeadingZeros(dayOfYear, token.length);\r\n  },\r\n\r\n  // Day of week\r\n  E: function (date, token, localize) {\r\n    const dayOfWeek = date.getDay();\r\n    switch (token) {\r\n      // Tue\r\n      case \"E\":\r\n      case \"EE\":\r\n      case \"EEE\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"abbreviated\",\r\n          context: \"formatting\",\r\n        });\r\n      // T\r\n      case \"EEEEE\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"narrow\",\r\n          context: \"formatting\",\r\n        });\r\n      // Tu\r\n      case \"EEEEEE\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"short\",\r\n          context: \"formatting\",\r\n        });\r\n      // Tuesday\r\n      case \"EEEE\":\r\n      default:\r\n        return localize.day(dayOfWeek, {\r\n          width: \"wide\",\r\n          context: \"formatting\",\r\n        });\r\n    }\r\n  },\r\n\r\n  // Local day of week\r\n  e: function (date, token, localize, options) {\r\n    const dayOfWeek = date.getDay();\r\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\r\n    switch (token) {\r\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\r\n      case \"e\":\r\n        return String(localDayOfWeek);\r\n      // Padded numerical value\r\n      case \"ee\":\r\n        return addLeadingZeros(localDayOfWeek, 2);\r\n      // 1st, 2nd, ..., 7th\r\n      case \"eo\":\r\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\r\n      case \"eee\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"abbreviated\",\r\n          context: \"formatting\",\r\n        });\r\n      // T\r\n      case \"eeeee\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"narrow\",\r\n          context: \"formatting\",\r\n        });\r\n      // Tu\r\n      case \"eeeeee\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"short\",\r\n          context: \"formatting\",\r\n        });\r\n      // Tuesday\r\n      case \"eeee\":\r\n      default:\r\n        return localize.day(dayOfWeek, {\r\n          width: \"wide\",\r\n          context: \"formatting\",\r\n        });\r\n    }\r\n  },\r\n\r\n  // Stand-alone local day of week\r\n  c: function (date, token, localize, options) {\r\n    const dayOfWeek = date.getDay();\r\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\r\n    switch (token) {\r\n      // Numerical value (same as in `e`)\r\n      case \"c\":\r\n        return String(localDayOfWeek);\r\n      // Padded numerical value\r\n      case \"cc\":\r\n        return addLeadingZeros(localDayOfWeek, token.length);\r\n      // 1st, 2nd, ..., 7th\r\n      case \"co\":\r\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\r\n      case \"ccc\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"abbreviated\",\r\n          context: \"standalone\",\r\n        });\r\n      // T\r\n      case \"ccccc\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"narrow\",\r\n          context: \"standalone\",\r\n        });\r\n      // Tu\r\n      case \"cccccc\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"short\",\r\n          context: \"standalone\",\r\n        });\r\n      // Tuesday\r\n      case \"cccc\":\r\n      default:\r\n        return localize.day(dayOfWeek, {\r\n          width: \"wide\",\r\n          context: \"standalone\",\r\n        });\r\n    }\r\n  },\r\n\r\n  // ISO day of week\r\n  i: function (date, token, localize) {\r\n    const dayOfWeek = date.getDay();\r\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\r\n    switch (token) {\r\n      // 2\r\n      case \"i\":\r\n        return String(isoDayOfWeek);\r\n      // 02\r\n      case \"ii\":\r\n        return addLeadingZeros(isoDayOfWeek, token.length);\r\n      // 2nd\r\n      case \"io\":\r\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\r\n      // Tue\r\n      case \"iii\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"abbreviated\",\r\n          context: \"formatting\",\r\n        });\r\n      // T\r\n      case \"iiiii\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"narrow\",\r\n          context: \"formatting\",\r\n        });\r\n      // Tu\r\n      case \"iiiiii\":\r\n        return localize.day(dayOfWeek, {\r\n          width: \"short\",\r\n          context: \"formatting\",\r\n        });\r\n      // Tuesday\r\n      case \"iiii\":\r\n      default:\r\n        return localize.day(dayOfWeek, {\r\n          width: \"wide\",\r\n          context: \"formatting\",\r\n        });\r\n    }\r\n  },\r\n\r\n  // AM or PM\r\n  a: function (date, token, localize) {\r\n    const hours = date.getHours();\r\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\r\n\r\n    switch (token) {\r\n      case \"a\":\r\n      case \"aa\":\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: \"abbreviated\",\r\n          context: \"formatting\",\r\n        });\r\n      case \"aaa\":\r\n        return localize\r\n          .dayPeriod(dayPeriodEnumValue, {\r\n            width: \"abbreviated\",\r\n            context: \"formatting\",\r\n          })\r\n          .toLowerCase();\r\n      case \"aaaaa\":\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: \"narrow\",\r\n          context: \"formatting\",\r\n        });\r\n      case \"aaaa\":\r\n      default:\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: \"wide\",\r\n          context: \"formatting\",\r\n        });\r\n    }\r\n  },\r\n\r\n  // AM, PM, midnight, noon\r\n  b: function (date, token, localize) {\r\n    const hours = date.getHours();\r\n    let dayPeriodEnumValue;\r\n    if (hours === 12) {\r\n      dayPeriodEnumValue = dayPeriodEnum.noon;\r\n    } else if (hours === 0) {\r\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\r\n    } else {\r\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\r\n    }\r\n\r\n    switch (token) {\r\n      case \"b\":\r\n      case \"bb\":\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: \"abbreviated\",\r\n          context: \"formatting\",\r\n        });\r\n      case \"bbb\":\r\n        return localize\r\n          .dayPeriod(dayPeriodEnumValue, {\r\n            width: \"abbreviated\",\r\n            context: \"formatting\",\r\n          })\r\n          .toLowerCase();\r\n      case \"bbbbb\":\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: \"narrow\",\r\n          context: \"formatting\",\r\n        });\r\n      case \"bbbb\":\r\n      default:\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: \"wide\",\r\n          context: \"formatting\",\r\n        });\r\n    }\r\n  },\r\n\r\n  // in the morning, in the afternoon, in the evening, at night\r\n  B: function (date, token, localize) {\r\n    const hours = date.getHours();\r\n    let dayPeriodEnumValue;\r\n    if (hours >= 17) {\r\n      dayPeriodEnumValue = dayPeriodEnum.evening;\r\n    } else if (hours >= 12) {\r\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\r\n    } else if (hours >= 4) {\r\n      dayPeriodEnumValue = dayPeriodEnum.morning;\r\n    } else {\r\n      dayPeriodEnumValue = dayPeriodEnum.night;\r\n    }\r\n\r\n    switch (token) {\r\n      case \"B\":\r\n      case \"BB\":\r\n      case \"BBB\":\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: \"abbreviated\",\r\n          context: \"formatting\",\r\n        });\r\n      case \"BBBBB\":\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: \"narrow\",\r\n          context: \"formatting\",\r\n        });\r\n      case \"BBBB\":\r\n      default:\r\n        return localize.dayPeriod(dayPeriodEnumValue, {\r\n          width: \"wide\",\r\n          context: \"formatting\",\r\n        });\r\n    }\r\n  },\r\n\r\n  // Hour [1-12]\r\n  h: function (date, token, localize) {\r\n    if (token === \"ho\") {\r\n      let hours = date.getHours() % 12;\r\n      if (hours === 0) hours = 12;\r\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\r\n    }\r\n\r\n    return lightFormatters.h(date, token);\r\n  },\r\n\r\n  // Hour [0-23]\r\n  H: function (date, token, localize) {\r\n    if (token === \"Ho\") {\r\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\r\n    }\r\n\r\n    return lightFormatters.H(date, token);\r\n  },\r\n\r\n  // Hour [0-11]\r\n  K: function (date, token, localize) {\r\n    const hours = date.getHours() % 12;\r\n\r\n    if (token === \"Ko\") {\r\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\r\n    }\r\n\r\n    return addLeadingZeros(hours, token.length);\r\n  },\r\n\r\n  // Hour [1-24]\r\n  k: function (date, token, localize) {\r\n    let hours = date.getHours();\r\n    if (hours === 0) hours = 24;\r\n\r\n    if (token === \"ko\") {\r\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\r\n    }\r\n\r\n    return addLeadingZeros(hours, token.length);\r\n  },\r\n\r\n  // Minute\r\n  m: function (date, token, localize) {\r\n    if (token === \"mo\") {\r\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\r\n    }\r\n\r\n    return lightFormatters.m(date, token);\r\n  },\r\n\r\n  // Second\r\n  s: function (date, token, localize) {\r\n    if (token === \"so\") {\r\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\r\n    }\r\n\r\n    return lightFormatters.s(date, token);\r\n  },\r\n\r\n  // Fraction of second\r\n  S: function (date, token) {\r\n    return lightFormatters.S(date, token);\r\n  },\r\n\r\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\r\n  X: function (date, token, _localize) {\r\n    const timezoneOffset = date.getTimezoneOffset();\r\n\r\n    if (timezoneOffset === 0) {\r\n      return \"Z\";\r\n    }\r\n\r\n    switch (token) {\r\n      // Hours and optional minutes\r\n      case \"X\":\r\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\r\n\r\n      // Hours, minutes and optional seconds without `:` delimiter\r\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\r\n      // so this token always has the same output as `XX`\r\n      case \"XXXX\":\r\n      case \"XX\": // Hours and minutes without `:` delimiter\r\n        return formatTimezone(timezoneOffset);\r\n\r\n      // Hours, minutes and optional seconds with `:` delimiter\r\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\r\n      // so this token always has the same output as `XXX`\r\n      case \"XXXXX\":\r\n      case \"XXX\": // Hours and minutes with `:` delimiter\r\n      default:\r\n        return formatTimezone(timezoneOffset, \":\");\r\n    }\r\n  },\r\n\r\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\r\n  x: function (date, token, _localize) {\r\n    const timezoneOffset = date.getTimezoneOffset();\r\n\r\n    switch (token) {\r\n      // Hours and optional minutes\r\n      case \"x\":\r\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\r\n\r\n      // Hours, minutes and optional seconds without `:` delimiter\r\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\r\n      // so this token always has the same output as `xx`\r\n      case \"xxxx\":\r\n      case \"xx\": // Hours and minutes without `:` delimiter\r\n        return formatTimezone(timezoneOffset);\r\n\r\n      // Hours, minutes and optional seconds with `:` delimiter\r\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\r\n      // so this token always has the same output as `xxx`\r\n      case \"xxxxx\":\r\n      case \"xxx\": // Hours and minutes with `:` delimiter\r\n      default:\r\n        return formatTimezone(timezoneOffset, \":\");\r\n    }\r\n  },\r\n\r\n  // Timezone (GMT)\r\n  O: function (date, token, _localize) {\r\n    const timezoneOffset = date.getTimezoneOffset();\r\n\r\n    switch (token) {\r\n      // Short\r\n      case \"O\":\r\n      case \"OO\":\r\n      case \"OOO\":\r\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\r\n      // Long\r\n      case \"OOOO\":\r\n      default:\r\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\r\n    }\r\n  },\r\n\r\n  // Timezone (specific non-location)\r\n  z: function (date, token, _localize) {\r\n    const timezoneOffset = date.getTimezoneOffset();\r\n\r\n    switch (token) {\r\n      // Short\r\n      case \"z\":\r\n      case \"zz\":\r\n      case \"zzz\":\r\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\r\n      // Long\r\n      case \"zzzz\":\r\n      default:\r\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\r\n    }\r\n  },\r\n\r\n  // Seconds timestamp\r\n  t: function (date, token, _localize) {\r\n    const timestamp = Math.trunc(date.getTime() / 1000);\r\n    return addLeadingZeros(timestamp, token.length);\r\n  },\r\n\r\n  // Milliseconds timestamp\r\n  T: function (date, token, _localize) {\r\n    const timestamp = date.getTime();\r\n    return addLeadingZeros(timestamp, token.length);\r\n  },\r\n};\r\n\r\nfunction formatTimezoneShort(offset, delimiter = \"\") {\r\n  const sign = offset > 0 ? \"-\" : \"+\";\r\n  const absOffset = Math.abs(offset);\r\n  const hours = Math.trunc(absOffset / 60);\r\n  const minutes = absOffset % 60;\r\n  if (minutes === 0) {\r\n    return sign + String(hours);\r\n  }\r\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\r\n}\r\n\r\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\r\n  if (offset % 60 === 0) {\r\n    const sign = offset > 0 ? \"-\" : \"+\";\r\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\r\n  }\r\n  return formatTimezone(offset, delimiter);\r\n}\r\n\r\nfunction formatTimezone(offset, delimiter = \"\") {\r\n  const sign = offset > 0 ? \"-\" : \"+\";\r\n  const absOffset = Math.abs(offset);\r\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\r\n  const minutes = addLeadingZeros(absOffset % 60, 2);\r\n  return sign + hours + delimiter + minutes;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}