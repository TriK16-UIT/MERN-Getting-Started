{"ast":null,"code":"import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return match.dayPeriod(dateString, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }) || match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"BBBB\":\n      default:\n        return match.dayPeriod(dateString, {\n          width: \"wide\",\n          context: \"formatting\"\n        }) || match.dayPeriod(dateString, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }) || match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n    }\n  }\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}","map":{"version":3,"names":["Parser","dayPeriodEnumToHours","DayPeriodParser","priority","parse","dateString","token","match","dayPeriod","width","context","set","date","_flags","value","setHours","incompatibleTokens"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs"],"sourcesContent":["import { Parser } from \"../Parser.mjs\";\r\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\r\n\r\n// in the morning, in the afternoon, in the evening, at night\r\nexport class DayPeriodParser extends Parser {\r\n  priority = 80;\r\n\r\n  parse(dateString, token, match) {\r\n    switch (token) {\r\n      case \"B\":\r\n      case \"BB\":\r\n      case \"BBB\":\r\n        return (\r\n          match.dayPeriod(dateString, {\r\n            width: \"abbreviated\",\r\n            context: \"formatting\",\r\n          }) ||\r\n          match.dayPeriod(dateString, {\r\n            width: \"narrow\",\r\n            context: \"formatting\",\r\n          })\r\n        );\r\n\r\n      case \"BBBBB\":\r\n        return match.dayPeriod(dateString, {\r\n          width: \"narrow\",\r\n          context: \"formatting\",\r\n        });\r\n      case \"BBBB\":\r\n      default:\r\n        return (\r\n          match.dayPeriod(dateString, {\r\n            width: \"wide\",\r\n            context: \"formatting\",\r\n          }) ||\r\n          match.dayPeriod(dateString, {\r\n            width: \"abbreviated\",\r\n            context: \"formatting\",\r\n          }) ||\r\n          match.dayPeriod(dateString, {\r\n            width: \"narrow\",\r\n            context: \"formatting\",\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  set(date, _flags, value) {\r\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\r\n    return date;\r\n  }\r\n\r\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,oBAAoB,QAAQ,cAAc;;AAEnD;AACA,OAAO,MAAMC,eAAe,SAASF,MAAM,CAAC;EAC1CG,QAAQ,GAAG,EAAE;EAEbC,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC9B,QAAQD,KAAK;MACX,KAAK,GAAG;MACR,KAAK,IAAI;MACT,KAAK,KAAK;QACR,OACEC,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UAC1BI,KAAK,EAAE,aAAa;UACpBC,OAAO,EAAE;QACX,CAAC,CAAC,IACFH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UAC1BI,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;MAGN,KAAK,OAAO;QACV,OAAOH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UACjCI,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,KAAK,MAAM;MACX;QACE,OACEH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UAC1BI,KAAK,EAAE,MAAM;UACbC,OAAO,EAAE;QACX,CAAC,CAAC,IACFH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UAC1BI,KAAK,EAAE,aAAa;UACpBC,OAAO,EAAE;QACX,CAAC,CAAC,IACFH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UAC1BI,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;IAER;EACF;EAEAC,GAAGA,CAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAE;IACvBF,IAAI,CAACG,QAAQ,CAACd,oBAAoB,CAACa,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,OAAOF,IAAI;EACb;EAEAI,kBAAkB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}