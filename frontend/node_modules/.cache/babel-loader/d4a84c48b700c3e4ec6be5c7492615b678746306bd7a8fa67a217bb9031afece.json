{"ast":null,"code":"import { startOfHour } from \"./startOfHour.mjs\";\n\n/**\r\n * @name isSameHour\r\n * @category Hour Helpers\r\n * @summary Are the given dates in the same hour (and same day)?\r\n *\r\n * @description\r\n * Are the given dates in the same hour (and same day)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same hour (and same day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\r\n * //=> false\r\n */\nexport function isSameHour(dateLeft, dateRight) {\n  const dateLeftStartOfHour = startOfHour(dateLeft);\n  const dateRightStartOfHour = startOfHour(dateRight);\n  return +dateLeftStartOfHour === +dateRightStartOfHour;\n}\n\n// Fallback for modularized imports:\nexport default isSameHour;","map":{"version":3,"names":["startOfHour","isSameHour","dateLeft","dateRight","dateLeftStartOfHour","dateRightStartOfHour"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/isSameHour.mjs"],"sourcesContent":["import { startOfHour } from \"./startOfHour.mjs\";\r\n\r\n/**\r\n * @name isSameHour\r\n * @category Hour Helpers\r\n * @summary Are the given dates in the same hour (and same day)?\r\n *\r\n * @description\r\n * Are the given dates in the same hour (and same day)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same hour (and same day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\r\n * //=> false\r\n */\r\nexport function isSameHour(dateLeft, dateRight) {\r\n  const dateLeftStartOfHour = startOfHour(dateLeft);\r\n  const dateRightStartOfHour = startOfHour(dateRight);\r\n\r\n  return +dateLeftStartOfHour === +dateRightStartOfHour;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isSameHour;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,mBAAmB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,QAAQ,EAAEC,SAAS,EAAE;EAC9C,MAAMC,mBAAmB,GAAGJ,WAAW,CAACE,QAAQ,CAAC;EACjD,MAAMG,oBAAoB,GAAGL,WAAW,CAACG,SAAS,CAAC;EAEnD,OAAO,CAACC,mBAAmB,KAAK,CAACC,oBAAoB;AACvD;;AAEA;AACA,eAAeJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}