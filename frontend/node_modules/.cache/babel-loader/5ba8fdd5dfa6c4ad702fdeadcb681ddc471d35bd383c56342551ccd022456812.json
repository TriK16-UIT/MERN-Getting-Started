{"ast":null,"code":"import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\r\n * @name lastDayOfISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Return the last day of an ISO week-numbering year for the given date.\r\n *\r\n * @description\r\n * Return the last day of an ISO week-numbering year,\r\n * which always starts 3 days before the year's first Thursday.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n *\r\n * @returns The end of an ISO week-numbering year\r\n *\r\n * @example\r\n * // The last day of an ISO week-numbering year for 2 July 2005:\r\n * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\r\n * //=> Sun Jan 01 2006 00:00:00\r\n */\nexport function lastDayOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  const _date = startOfISOWeek(fourthOfJanuary);\n  _date.setDate(_date.getDate() - 1);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default lastDayOfISOWeekYear;","map":{"version":3,"names":["getISOWeekYear","startOfISOWeek","constructFrom","lastDayOfISOWeekYear","date","year","fourthOfJanuary","setFullYear","setHours","_date","setDate","getDate"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/lastDayOfISOWeekYear.mjs"],"sourcesContent":["import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\r\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\r\nimport { constructFrom } from \"./constructFrom.mjs\";\r\n\r\n/**\r\n * @name lastDayOfISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Return the last day of an ISO week-numbering year for the given date.\r\n *\r\n * @description\r\n * Return the last day of an ISO week-numbering year,\r\n * which always starts 3 days before the year's first Thursday.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n *\r\n * @returns The end of an ISO week-numbering year\r\n *\r\n * @example\r\n * // The last day of an ISO week-numbering year for 2 July 2005:\r\n * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\r\n * //=> Sun Jan 01 2006 00:00:00\r\n */\r\nexport function lastDayOfISOWeekYear(date) {\r\n  const year = getISOWeekYear(date);\r\n  const fourthOfJanuary = constructFrom(date, 0);\r\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\r\n  fourthOfJanuary.setHours(0, 0, 0, 0);\r\n  const _date = startOfISOWeek(fourthOfJanuary);\r\n  _date.setDate(_date.getDate() - 1);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default lastDayOfISOWeekYear;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,aAAa,QAAQ,qBAAqB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EACzC,MAAMC,IAAI,GAAGL,cAAc,CAACI,IAAI,CAAC;EACjC,MAAME,eAAe,GAAGJ,aAAa,CAACE,IAAI,EAAE,CAAC,CAAC;EAC9CE,eAAe,CAACC,WAAW,CAACF,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3CC,eAAe,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpC,MAAMC,KAAK,GAAGR,cAAc,CAACK,eAAe,CAAC;EAC7CG,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAClC,OAAOF,KAAK;AACd;;AAEA;AACA,eAAeN,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}