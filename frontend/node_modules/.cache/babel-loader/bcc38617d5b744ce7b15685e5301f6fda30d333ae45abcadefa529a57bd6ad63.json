{"ast":null,"code":"import { getDay } from \"./getDay.mjs\";\nimport { subDays } from \"./subDays.mjs\";\n\n/**\r\n * @name previousDay\r\n * @category Weekday Helpers\r\n * @summary When is the previous day of the week?\r\n *\r\n * @description\r\n * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n * @param day - The day of the week\r\n *\r\n * @returns The date is the previous day of week\r\n *\r\n * @example\r\n * // When is the previous Monday before Mar, 20, 2020?\r\n * const result = previousDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 16 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the previous Tuesday before Mar, 21, 2020?\r\n * const result = previousDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 17 2020 00:00:00\r\n */\nexport function previousDay(date, day) {\n  let delta = getDay(date) - day;\n  if (delta <= 0) delta += 7;\n  return subDays(date, delta);\n}\n\n// Fallback for modularized imports:\nexport default previousDay;","map":{"version":3,"names":["getDay","subDays","previousDay","date","day","delta"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/previousDay.mjs"],"sourcesContent":["import { getDay } from \"./getDay.mjs\";\r\nimport { subDays } from \"./subDays.mjs\";\r\n\r\n/**\r\n * @name previousDay\r\n * @category Weekday Helpers\r\n * @summary When is the previous day of the week?\r\n *\r\n * @description\r\n * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n * @param day - The day of the week\r\n *\r\n * @returns The date is the previous day of week\r\n *\r\n * @example\r\n * // When is the previous Monday before Mar, 20, 2020?\r\n * const result = previousDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 16 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the previous Tuesday before Mar, 21, 2020?\r\n * const result = previousDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 17 2020 00:00:00\r\n */\r\nexport function previousDay(date, day) {\r\n  let delta = getDay(date) - day;\r\n  if (delta <= 0) delta += 7;\r\n\r\n  return subDays(date, delta);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default previousDay;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;AACrC,SAASC,OAAO,QAAQ,eAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAEC,GAAG,EAAE;EACrC,IAAIC,KAAK,GAAGL,MAAM,CAACG,IAAI,CAAC,GAAGC,GAAG;EAC9B,IAAIC,KAAK,IAAI,CAAC,EAAEA,KAAK,IAAI,CAAC;EAE1B,OAAOJ,OAAO,CAACE,IAAI,EAAEE,KAAK,CAAC;AAC7B;;AAEA;AACA,eAAeH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}