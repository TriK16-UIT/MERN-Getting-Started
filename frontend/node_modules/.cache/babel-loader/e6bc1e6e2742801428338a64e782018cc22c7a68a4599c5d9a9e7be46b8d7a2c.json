{"ast":null,"code":"/**\r\n * @module constants\r\n * @summary Useful constants\r\n * @description\r\n * Collection of useful date constants.\r\n *\r\n * The constants could be imported from `date-fns/constants`:\r\n *\r\n * ```ts\r\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\r\n *\r\n * function isAllowedTime(time) {\r\n *   return time <= maxTime && time >= minTime;\r\n * }\r\n * ```\r\n */\n\n/**\r\n * @constant\r\n * @name daysInWeek\r\n * @summary Days in 1 week.\r\n */\nexport const daysInWeek = 7;\n\n/**\r\n * @constant\r\n * @name daysInYear\r\n * @summary Days in 1 year.\r\n *\r\n * @description\r\n * How many days in a year.\r\n *\r\n * One years equals 365.2425 days according to the formula:\r\n *\r\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\r\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\r\n */\nexport const daysInYear = 365.2425;\n\n/**\r\n * @constant\r\n * @name maxTime\r\n * @summary Maximum allowed time.\r\n *\r\n * @example\r\n * import { maxTime } from \"./constants/date-fns/constants\";\r\n *\r\n * const isValid = 8640000000000001 <= maxTime;\r\n * //=> false\r\n *\r\n * new Date(8640000000000001);\r\n * //=> Invalid Date\r\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\r\n * @constant\r\n * @name minTime\r\n * @summary Minimum allowed time.\r\n *\r\n * @example\r\n * import { minTime } from \"./constants/date-fns/constants\";\r\n *\r\n * const isValid = -8640000000000001 >= minTime;\r\n * //=> false\r\n *\r\n * new Date(-8640000000000001)\r\n * //=> Invalid Date\r\n */\nexport const minTime = -maxTime;\n\n/**\r\n * @constant\r\n * @name millisecondsInWeek\r\n * @summary Milliseconds in 1 week.\r\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\r\n * @constant\r\n * @name millisecondsInDay\r\n * @summary Milliseconds in 1 day.\r\n */\nexport const millisecondsInDay = 86400000;\n\n/**\r\n * @constant\r\n * @name millisecondsInMinute\r\n * @summary Milliseconds in 1 minute\r\n */\nexport const millisecondsInMinute = 60000;\n\n/**\r\n * @constant\r\n * @name millisecondsInHour\r\n * @summary Milliseconds in 1 hour\r\n */\nexport const millisecondsInHour = 3600000;\n\n/**\r\n * @constant\r\n * @name millisecondsInSecond\r\n * @summary Milliseconds in 1 second\r\n */\nexport const millisecondsInSecond = 1000;\n\n/**\r\n * @constant\r\n * @name minutesInYear\r\n * @summary Minutes in 1 year.\r\n */\nexport const minutesInYear = 525600;\n\n/**\r\n * @constant\r\n * @name minutesInMonth\r\n * @summary Minutes in 1 month.\r\n */\nexport const minutesInMonth = 43200;\n\n/**\r\n * @constant\r\n * @name minutesInDay\r\n * @summary Minutes in 1 day.\r\n */\nexport const minutesInDay = 1440;\n\n/**\r\n * @constant\r\n * @name minutesInHour\r\n * @summary Minutes in 1 hour.\r\n */\nexport const minutesInHour = 60;\n\n/**\r\n * @constant\r\n * @name monthsInQuarter\r\n * @summary Months in 1 quarter.\r\n */\nexport const monthsInQuarter = 3;\n\n/**\r\n * @constant\r\n * @name monthsInYear\r\n * @summary Months in 1 year.\r\n */\nexport const monthsInYear = 12;\n\n/**\r\n * @constant\r\n * @name quartersInYear\r\n * @summary Quarters in 1 year\r\n */\nexport const quartersInYear = 4;\n\n/**\r\n * @constant\r\n * @name secondsInHour\r\n * @summary Seconds in 1 hour.\r\n */\nexport const secondsInHour = 3600;\n\n/**\r\n * @constant\r\n * @name secondsInMinute\r\n * @summary Seconds in 1 minute.\r\n */\nexport const secondsInMinute = 60;\n\n/**\r\n * @constant\r\n * @name secondsInDay\r\n * @summary Seconds in 1 day.\r\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\r\n * @constant\r\n * @name secondsInWeek\r\n * @summary Seconds in 1 week.\r\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\r\n * @constant\r\n * @name secondsInYear\r\n * @summary Seconds in 1 year.\r\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\r\n * @constant\r\n * @name secondsInMonth\r\n * @summary Seconds in 1 month\r\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\r\n * @constant\r\n * @name secondsInQuarter\r\n * @summary Seconds in 1 quarter.\r\n */\nexport const secondsInQuarter = secondsInMonth * 3;","map":{"version":3,"names":["daysInWeek","daysInYear","maxTime","Math","pow","minTime","millisecondsInWeek","millisecondsInDay","millisecondsInMinute","millisecondsInHour","millisecondsInSecond","minutesInYear","minutesInMonth","minutesInDay","minutesInHour","monthsInQuarter","monthsInYear","quartersInYear","secondsInHour","secondsInMinute","secondsInDay","secondsInWeek","secondsInYear","secondsInMonth","secondsInQuarter"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/constants.mjs"],"sourcesContent":["/**\r\n * @module constants\r\n * @summary Useful constants\r\n * @description\r\n * Collection of useful date constants.\r\n *\r\n * The constants could be imported from `date-fns/constants`:\r\n *\r\n * ```ts\r\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\r\n *\r\n * function isAllowedTime(time) {\r\n *   return time <= maxTime && time >= minTime;\r\n * }\r\n * ```\r\n */\r\n\r\n/**\r\n * @constant\r\n * @name daysInWeek\r\n * @summary Days in 1 week.\r\n */\r\nexport const daysInWeek = 7;\r\n\r\n/**\r\n * @constant\r\n * @name daysInYear\r\n * @summary Days in 1 year.\r\n *\r\n * @description\r\n * How many days in a year.\r\n *\r\n * One years equals 365.2425 days according to the formula:\r\n *\r\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\r\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\r\n */\r\nexport const daysInYear = 365.2425;\r\n\r\n/**\r\n * @constant\r\n * @name maxTime\r\n * @summary Maximum allowed time.\r\n *\r\n * @example\r\n * import { maxTime } from \"./constants/date-fns/constants\";\r\n *\r\n * const isValid = 8640000000000001 <= maxTime;\r\n * //=> false\r\n *\r\n * new Date(8640000000000001);\r\n * //=> Invalid Date\r\n */\r\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\r\n\r\n/**\r\n * @constant\r\n * @name minTime\r\n * @summary Minimum allowed time.\r\n *\r\n * @example\r\n * import { minTime } from \"./constants/date-fns/constants\";\r\n *\r\n * const isValid = -8640000000000001 >= minTime;\r\n * //=> false\r\n *\r\n * new Date(-8640000000000001)\r\n * //=> Invalid Date\r\n */\r\nexport const minTime = -maxTime;\r\n\r\n/**\r\n * @constant\r\n * @name millisecondsInWeek\r\n * @summary Milliseconds in 1 week.\r\n */\r\nexport const millisecondsInWeek = 604800000;\r\n\r\n/**\r\n * @constant\r\n * @name millisecondsInDay\r\n * @summary Milliseconds in 1 day.\r\n */\r\nexport const millisecondsInDay = 86400000;\r\n\r\n/**\r\n * @constant\r\n * @name millisecondsInMinute\r\n * @summary Milliseconds in 1 minute\r\n */\r\nexport const millisecondsInMinute = 60000;\r\n\r\n/**\r\n * @constant\r\n * @name millisecondsInHour\r\n * @summary Milliseconds in 1 hour\r\n */\r\nexport const millisecondsInHour = 3600000;\r\n\r\n/**\r\n * @constant\r\n * @name millisecondsInSecond\r\n * @summary Milliseconds in 1 second\r\n */\r\nexport const millisecondsInSecond = 1000;\r\n\r\n/**\r\n * @constant\r\n * @name minutesInYear\r\n * @summary Minutes in 1 year.\r\n */\r\nexport const minutesInYear = 525600;\r\n\r\n/**\r\n * @constant\r\n * @name minutesInMonth\r\n * @summary Minutes in 1 month.\r\n */\r\nexport const minutesInMonth = 43200;\r\n\r\n/**\r\n * @constant\r\n * @name minutesInDay\r\n * @summary Minutes in 1 day.\r\n */\r\nexport const minutesInDay = 1440;\r\n\r\n/**\r\n * @constant\r\n * @name minutesInHour\r\n * @summary Minutes in 1 hour.\r\n */\r\nexport const minutesInHour = 60;\r\n\r\n/**\r\n * @constant\r\n * @name monthsInQuarter\r\n * @summary Months in 1 quarter.\r\n */\r\nexport const monthsInQuarter = 3;\r\n\r\n/**\r\n * @constant\r\n * @name monthsInYear\r\n * @summary Months in 1 year.\r\n */\r\nexport const monthsInYear = 12;\r\n\r\n/**\r\n * @constant\r\n * @name quartersInYear\r\n * @summary Quarters in 1 year\r\n */\r\nexport const quartersInYear = 4;\r\n\r\n/**\r\n * @constant\r\n * @name secondsInHour\r\n * @summary Seconds in 1 hour.\r\n */\r\nexport const secondsInHour = 3600;\r\n\r\n/**\r\n * @constant\r\n * @name secondsInMinute\r\n * @summary Seconds in 1 minute.\r\n */\r\nexport const secondsInMinute = 60;\r\n\r\n/**\r\n * @constant\r\n * @name secondsInDay\r\n * @summary Seconds in 1 day.\r\n */\r\nexport const secondsInDay = secondsInHour * 24;\r\n\r\n/**\r\n * @constant\r\n * @name secondsInWeek\r\n * @summary Seconds in 1 week.\r\n */\r\nexport const secondsInWeek = secondsInDay * 7;\r\n\r\n/**\r\n * @constant\r\n * @name secondsInYear\r\n * @summary Seconds in 1 year.\r\n */\r\nexport const secondsInYear = secondsInDay * daysInYear;\r\n\r\n/**\r\n * @constant\r\n * @name secondsInMonth\r\n * @summary Seconds in 1 month\r\n */\r\nexport const secondsInMonth = secondsInYear / 12;\r\n\r\n/**\r\n * @constant\r\n * @name secondsInQuarter\r\n * @summary Seconds in 1 quarter.\r\n */\r\nexport const secondsInQuarter = secondsInMonth * 3;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,UAAU,GAAG,CAAC;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG,QAAQ;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAG,CAACH,OAAO;;AAE/B;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,kBAAkB,GAAG,SAAS;;AAE3C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAG,QAAQ;;AAEzC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAG,KAAK;;AAEzC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;;AAEzC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAG,IAAI;;AAExC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;;AAEnC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG,KAAK;;AAEnC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG,IAAI;;AAEhC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG,EAAE;;AAE/B;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG,CAAC;;AAE/B;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG,IAAI;;AAEjC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,EAAE;;AAEjC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGF,aAAa,GAAG,EAAE;;AAE9C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,aAAa,GAAGD,YAAY,GAAG,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,aAAa,GAAGF,YAAY,GAAGnB,UAAU;;AAEtD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMsB,cAAc,GAAGD,aAAa,GAAG,EAAE;;AAEhD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,gBAAgB,GAAGD,cAAc,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}