{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\r\n * @name addDays\r\n * @category Day Helpers\r\n * @summary Add the specified number of days to the given date.\r\n *\r\n * @description\r\n * Add the specified number of days to the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param amount - The amount of days to be added.\r\n *\r\n * @returns The new date with the days added\r\n *\r\n * @example\r\n * // Add 10 days to 1 September 2014:\r\n * const result = addDays(new Date(2014, 8, 1), 10)\r\n * //=> Thu Sep 11 2014 00:00:00\r\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;","map":{"version":3,"names":["toDate","constructFrom","addDays","date","amount","_date","isNaN","NaN","setDate","getDate"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/addDays.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\r\nimport { constructFrom } from \"./constructFrom.mjs\";\r\n\r\n/**\r\n * @name addDays\r\n * @category Day Helpers\r\n * @summary Add the specified number of days to the given date.\r\n *\r\n * @description\r\n * Add the specified number of days to the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param amount - The amount of days to be added.\r\n *\r\n * @returns The new date with the days added\r\n *\r\n * @example\r\n * // Add 10 days to 1 September 2014:\r\n * const result = addDays(new Date(2014, 8, 1), 10)\r\n * //=> Thu Sep 11 2014 00:00:00\r\n */\r\nexport function addDays(date, amount) {\r\n  const _date = toDate(date);\r\n  if (isNaN(amount)) return constructFrom(date, NaN);\r\n  if (!amount) {\r\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\r\n    return _date;\r\n  }\r\n  _date.setDate(_date.getDate() + amount);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default addDays;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;AACrC,SAASC,aAAa,QAAQ,qBAAqB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAACC,IAAI,EAAEC,MAAM,EAAE;EACpC,MAAMC,KAAK,GAAGL,MAAM,CAACG,IAAI,CAAC;EAC1B,IAAIG,KAAK,CAACF,MAAM,CAAC,EAAE,OAAOH,aAAa,CAACE,IAAI,EAAEI,GAAG,CAAC;EAClD,IAAI,CAACH,MAAM,EAAE;IACX;IACA,OAAOC,KAAK;EACd;EACAA,KAAK,CAACG,OAAO,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC,GAAGL,MAAM,CAAC;EACvC,OAAOC,KAAK;AACd;;AAEA;AACA,eAAeH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}