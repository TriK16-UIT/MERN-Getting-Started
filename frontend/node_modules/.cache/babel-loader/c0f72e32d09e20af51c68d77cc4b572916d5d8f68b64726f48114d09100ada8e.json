{"ast":null,"code":"import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), {\n      timestampIsSet: true\n    }];\n  }\n  incompatibleTokens = \"*\";\n}","map":{"version":3,"names":["constructFrom","Parser","parseAnyDigitsSigned","TimestampSecondsParser","priority","parse","dateString","set","date","_flags","value","timestampIsSet","incompatibleTokens"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs"],"sourcesContent":["import { constructFrom } from \"../../../constructFrom.mjs\";\r\nimport { Parser } from \"../Parser.mjs\";\r\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\r\n\r\nexport class TimestampSecondsParser extends Parser {\r\n  priority = 40;\r\n\r\n  parse(dateString) {\r\n    return parseAnyDigitsSigned(dateString);\r\n  }\r\n\r\n  set(date, _flags, value) {\r\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\r\n  }\r\n\r\n  incompatibleTokens = \"*\";\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,oBAAoB,QAAQ,cAAc;AAEnD,OAAO,MAAMC,sBAAsB,SAASF,MAAM,CAAC;EACjDG,QAAQ,GAAG,EAAE;EAEbC,KAAKA,CAACC,UAAU,EAAE;IAChB,OAAOJ,oBAAoB,CAACI,UAAU,CAAC;EACzC;EAEAC,GAAGA,CAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAE;IACvB,OAAO,CAACV,aAAa,CAACQ,IAAI,EAAEE,KAAK,GAAG,IAAI,CAAC,EAAE;MAAEC,cAAc,EAAE;IAAK,CAAC,CAAC;EACtE;EAEAC,kBAAkB,GAAG,GAAG;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}