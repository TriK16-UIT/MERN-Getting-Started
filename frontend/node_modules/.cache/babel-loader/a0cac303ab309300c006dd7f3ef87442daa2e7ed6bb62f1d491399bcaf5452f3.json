{"ast":null,"code":"import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\r\n * @name differenceInCalendarISOWeeks\r\n * @category ISO Week Helpers\r\n * @summary Get the number of calendar ISO weeks between the given dates.\r\n *\r\n * @description\r\n * Get the number of calendar ISO weeks between the given dates.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The later date\r\n * @param dateRight - The earlier date\r\n *\r\n * @returns The number of calendar ISO weeks\r\n *\r\n * @example\r\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\r\n * const result = differenceInCalendarISOWeeks(\r\n *   new Date(2014, 6, 21),\r\n *   new Date(2014, 6, 6)\r\n * )\r\n * //=> 3\r\n */\nexport function differenceInCalendarISOWeeks(dateLeft, dateRight) {\n  const startOfISOWeekLeft = startOfISOWeek(dateLeft);\n  const startOfISOWeekRight = startOfISOWeek(dateRight);\n  const timestampLeft = +startOfISOWeekLeft - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  const timestampRight = +startOfISOWeekRight - getTimezoneOffsetInMilliseconds(startOfISOWeekRight);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInWeek);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarISOWeeks;","map":{"version":3,"names":["millisecondsInWeek","startOfISOWeek","getTimezoneOffsetInMilliseconds","differenceInCalendarISOWeeks","dateLeft","dateRight","startOfISOWeekLeft","startOfISOWeekRight","timestampLeft","timestampRight","Math","round"],"sources":["C:/Users/Storm/Desktop/SE104/MERN-tutorial/MERN-Getting-Started/frontend/node_modules/date-fns/differenceInCalendarISOWeeks.mjs"],"sourcesContent":["import { millisecondsInWeek } from \"./constants.mjs\";\r\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\r\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\r\n\r\n/**\r\n * @name differenceInCalendarISOWeeks\r\n * @category ISO Week Helpers\r\n * @summary Get the number of calendar ISO weeks between the given dates.\r\n *\r\n * @description\r\n * Get the number of calendar ISO weeks between the given dates.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The later date\r\n * @param dateRight - The earlier date\r\n *\r\n * @returns The number of calendar ISO weeks\r\n *\r\n * @example\r\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\r\n * const result = differenceInCalendarISOWeeks(\r\n *   new Date(2014, 6, 21),\r\n *   new Date(2014, 6, 6)\r\n * )\r\n * //=> 3\r\n */\r\nexport function differenceInCalendarISOWeeks(dateLeft, dateRight) {\r\n  const startOfISOWeekLeft = startOfISOWeek(dateLeft);\r\n  const startOfISOWeekRight = startOfISOWeek(dateRight);\r\n\r\n  const timestampLeft =\r\n    +startOfISOWeekLeft - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\r\n  const timestampRight =\r\n    +startOfISOWeekRight - getTimezoneOffsetInMilliseconds(startOfISOWeekRight);\r\n\r\n  // Round the number of weeks to the nearest integer because the number of\r\n  // milliseconds in a week is not constant (e.g. it's different in the week of\r\n  // the daylight saving time clock shift).\r\n  return Math.round((timestampLeft - timestampRight) / millisecondsInWeek);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default differenceInCalendarISOWeeks;\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,+BAA+B,QAAQ,4CAA4C;;AAE5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,4BAA4BA,CAACC,QAAQ,EAAEC,SAAS,EAAE;EAChE,MAAMC,kBAAkB,GAAGL,cAAc,CAACG,QAAQ,CAAC;EACnD,MAAMG,mBAAmB,GAAGN,cAAc,CAACI,SAAS,CAAC;EAErD,MAAMG,aAAa,GACjB,CAACF,kBAAkB,GAAGJ,+BAA+B,CAACI,kBAAkB,CAAC;EAC3E,MAAMG,cAAc,GAClB,CAACF,mBAAmB,GAAGL,+BAA+B,CAACK,mBAAmB,CAAC;;EAE7E;EACA;EACA;EACA,OAAOG,IAAI,CAACC,KAAK,CAAC,CAACH,aAAa,GAAGC,cAAc,IAAIT,kBAAkB,CAAC;AAC1E;;AAEA;AACA,eAAeG,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}